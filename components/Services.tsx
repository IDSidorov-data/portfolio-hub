import Container from '@/components/Container';
import Card from '@/components/Card';
import Button from '@/components/Button';
import { sendEvent } from '@/lib/analytics';

type Service = {
  id: string;
  title: string;
  desc: string;
  timeline: string;
  budget: string;
  tasks: string[];
};

const services: Service[] = [
  {
    id: 'analytics',
    title: 'Analytics',
    desc: '–ú–µ—Ç—Ä–∏–∫–∏, —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã, –¥–∞—à–±–æ—Ä–¥—ã ‚Äî —á—Ç–æ–±—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –ø–æ –¥–∞–Ω–Ω—ã–º',
    timeline: '3‚Äì10 –¥–Ω–µ–π',
    budget: '–æ—Ç 50 000 ‚ÇΩ',
    tasks: [
      '–ê—É–¥–∏—Ç –≤–æ—Ä–æ–Ω–∫–∏/—é–Ω–∏—Ç-—ç–∫–æ–Ω–æ–º–∏–∫–∏',
      '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ GA4 / –Ø.–ú–µ—Ç—Ä–∏–∫–∏ / GTM',
      '–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–±—ã—Ç–∏–π –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–π',
      'A/B-—Ç–µ—Å—Ç (–¥–∏–∑–∞–π–Ω, –∑–∞–ø—É—Å–∫, –∞–Ω–∞–ª–∏–∑)',
      'BI-–¥–∞—à–±–æ—Ä–¥ (Metabase/Looker Studio)',
    ],
  },
  {
    id: 'backend',
    title: 'Backend / API',
    desc: '–ü—Ä–æ–¥–∞–∫—à–µ–Ω-API –Ω–∞ FastAPI/Node, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
    timeline: '1‚Äì3 –Ω–µ–¥–µ–ª–∏',
    budget: '–æ—Ç 120 000 ‚ÇΩ',
    tasks: [
      '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ REST/GraphQL',
      '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (CRM, –ø–ª–∞—Ç–µ–∂–∏, Telegram, Notion)',
      '–ë—ç–∫–≥—Ä–∞—É–Ω–¥-–¥–∂–æ–±—ã / –≤–µ–±—Ö—É–∫–∏',
      '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (Sentry)',
      'CI/CD –∏ –¥–µ–ø–ª–æ–π (Fly/Render/Vercel)',
    ],
  },
  {
    id: 'bots',
    title: 'Bots / RPA',
    desc: '–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç—ã, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä—É—Ç–∏–Ω—ã',
    timeline: '5‚Äì12 –¥–Ω–µ–π',
    budget: '–æ—Ç 80 000 ‚ÇΩ',
    tasks: [
      '–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç (–º–µ–Ω—é, –ø–ª–∞—Ç–µ–∂–∏, WebApp)',
      '–°–±–æ—Ä –∑–∞—è–≤–æ–∫/–æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏',
      '–ê–≤—Ç–æ—Å–∏–Ω–∫ –≤ Notion/Sheets/CRM',
      '–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ/–ø–∞—Ä—Å–∏–Ω–≥ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
      'RPA-—Å—Ü–µ–Ω–∞—Ä–∏–∏ (–∑–∞–≥—Ä—É–∑–∫–∞/—Ä–∞—Å—Å—ã–ª–∫–∞)',
    ],
  },
  {
    id: 'mvp',
    title: 'MVP / Prototypes',
    desc: '–ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø—ã –Ω–∞ Next.js + Supabase –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–∏–ø–æ—Ç–µ–∑',
    timeline: '1‚Äì4 –Ω–µ–¥–µ–ª–∏',
    budget: '–æ—Ç 150 000 ‚ÇΩ',
    tasks: [
      '–°–±–æ—Ä–∫–∞ MVP (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, CRUD)',
      '–î–∏–∑–∞–π–Ω –ø—Ä–æ—Å—Ç—ã—Ö UI/–∫–µ–π—Å—ã/–ª–µ–Ω–¥–∏–Ω–≥',
      '–ü–ª–∞—Ç–µ–∂–∏/–ø–æ–¥–ø–∏—Å–∫–∏, email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
      '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å–æ–±—ã—Ç–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞',
      '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø–∏–ª–æ—Ç—É/–¥–µ–º–æ',
    ],
  },
];

export default function Services() {
  return (
    <section id="services" className="py-12 sm:py-16">
      <Container>
        <h2 className="mb-6 text-2xl font-semibold">–£—Å–ª—É–≥–∏</h2>
        <div className="grid gap-4 sm:grid-cols-2 lg:grid-cols-4">
          {services.map((s) => (
            <Card key={s.id} className="flex flex-col gap-3">
              <div>
                <h3 className="text-lg font-medium">{s.title}</h3>
                <p className="mt-1 text-sm opacity-90">{s.desc}</p>
              </div>
              <ul className="mt-2 list-disc space-y-1 pl-4 text-sm opacity-90">
                {s.tasks.map((t, i) => (
                  <li key={i}>{t}</li>
                ))}
              </ul>
              <div className="mt-auto flex items-center justify-between pt-3 text-sm opacity-90">
                <span>‚è± {s.timeline}</span>
                <span>üí∞ {s.budget}</span>
              </div>
              <div className="flex justify-end">
                <Button
                  variant="primary"
                  href="#brief"
                  onClick={() => sendEvent(`click_service_${s.id}`)}
                >
                  –û–±—Å—É–¥–∏—Ç—å
                </Button>
              </div>
            </Card>
          ))}
        </div>
      </Container>
    </section>
  );
}
